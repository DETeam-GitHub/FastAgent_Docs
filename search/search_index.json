{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to FastAgent","text":""},{"location":"about/","title":"\u5173\u4e8e FastAgent","text":""},{"location":"about/#_1","title":"\u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u4e2a\u9879\u76ee","text":"<p>Debug967 \u5728\u67d0\u4e00\u5929\u4f7f\u7528\u5bf9\u8bdd\u5927\u6a21\u578b API \u65f6\uff0c\u53d1\u73b0\u51fd\u6570\u8c03\u7528\u592a TM \u96be\u7528\u4e86\uff0c\u4e3a\u4e86\u7b80\u5316\u51fd\u6570\u8c03\u7528\u6d41\u7a0b\uff0c\u4fbf\u5f00\u53d1\u4e86\u8fd9\u4e2a\u9879\u76ee\u3002</p>"},{"location":"about/#_2","title":"\u4e3a\u4ec0\u4e48\u8981\u7528\u8fd9\u4e2a\u9879\u76ee","text":"<p>\u4e0d\u8bf4\u5e9f\u8bdd\uff0c\u4e0a\u5bf9\u6bd4</p> <p>\u5982\u679c\u6211\u4eec\u8981\u901a\u8fc7\u51fd\u6570\u8c03\u7528\u5b9e\u73b0web\u641c\u7d22\uff0c\u5219\u6709\u4ee5\u4e0b\u4e24\u79cd\u5199\u6cd5\uff1a</p>"},{"location":"about/#_3","title":"\u539f\u751f","text":"<p>\u5199\u7684\u5f88\u70c2\uff0c\u5927\u5bb6\u8f7b\u70b9\u55b7</p> zpws.py<pre><code>import requests\nimport uuid\nfrom rich import print\n\n\napi_key = \"YOUR_API_KEY\"\n\ndef run_v4_sync(q):\n    msg = [\n        {\n            \"role\": \"user\",\n            \"content\":q\n        }\n    ]\n    tool = \"web-search-pro\"\n    url = \"https://open.bigmodel.cn/api/paas/v4/tools\"\n    request_id = str(uuid.uuid4())\n    data = {\n        \"request_id\": request_id,\n        \"tool\": tool,\n        \"stream\": False,\n        \"messages\": msg\n    }\n\n    resp = requests.post(\n        url,\n        json=data,\n        headers={'Authorization': api_key},\n        timeout=300\n    )\n    return resp\n\n\n\nif __name__ == '__main__':\n    print(run_v4_sync().json())\n</code></pre> main.py<pre><code>from zhipuai import ZhipuAI\nfrom rich import print\nimport json\nfrom zpws import run_v4_sync as zps\n\ntools = [\n    {\n        \"type\": \"function\",\n        \"function\": {\n            \"name\": \"search\",\n            \"description\": \"\u8fdb\u884cWeb\u641c\u7d22\u5e76\u8fd4\u56deJSON\u683c\u5f0f\u7684\u7ed3\u679c\",\n            \"parameters\": {\n                \"type\": \"object\",\n                \"properties\": {\"q\": {\"type\": \"string\", \"description\": \"\u95ee\u9898\"}},\n                \"required\": [\"q\"],\n            },\n        },\n    }\n]\n\n\ndef rpy(e):\n    print(e)\n    try:\n        return zps(e)\n    except:\n        return f\"Error For {e}\"\n\n\nclient = ZhipuAI(api_key=\"YOUR_API_KEY\")\n\nmsg = [\n    {\n        \"role\": \"system\",\n        \"content\": \"\"\"\u4f60\u53ef\u4ee5\u8fdb\u884cWeb\u641c\u7d22\"\"\",\n    }\n]\n\n\ndef czp(om):\n    response = client.chat.completions.create(\n        model=\"glm-4-flash\",\n        messages=om,\n        tools=tools,\n    )\n\n    if response.choices[0].finish_reason == \"tool_calls\":\n        # print(response.choices[0])\n        om.append(\n            {\n                \"role\": \"tool\",\n                \"content\": rpy(\n                    json.loads(\n                        response.choices[0].message.tool_calls[0].function.arguments\n                    )[\"q\"]\n                ).content.decode(),\n            }\n        )\n        print(\"tool!\")\n        return czp(om)\n    elif response.choices[0].finish_reason == \"stop\":\n        om.append({\"role\": \"assistant\", \"content\": response.choices[0].message.content})\n        return om\n\n\nwhile True:\n    msg.append({\"role\": \"user\", \"content\": input(\"User&gt; \")})\n    print(czp(msg)[-1][\"content\"])\n</code></pre>"},{"location":"about/#_4","title":"\u4f7f\u7528\u672c\u9879\u76ee","text":"main.py<pre><code>from fast_agent import FastAgent\nimport requests,uuid\nfrom zhipuai import ZhipuAI\nimport \n\n\nKEY = \"YOUR_API_KEY\"\n\nc = FastAgent(KEY)\n\n@c.tool(q=\"\u641c\u7d22\u5185\u5bb9\")\ndef s(q:str):\n    \"\"\"\u7f51\u7edc\u641c\u7d22\u5668\uff0c\u8fd4\u56dejson\"\"\"\n    api_key = KEY\n    print(\"\u6b63\u5728\u641c\u7d22...\",q)\n    msg = [\n        {\n            \"role\": \"user\",\n            \"content\":q\n        }\n    ]\n    tool = \"web-search-pro\"\n    url = \"https://open.bigmodel.cn/api/paas/v4/tools\"\n    request_id = str(uuid.uuid4())\n    data = {\n        \"request_id\": request_id,\n        \"tool\": tool,\n        \"stream\": False,\n        \"messages\": msg\n    }\n\n    resp = requests.post(\n        url,\n        json=data,\n        headers={'Authorization': api_key},\n        timeout=300\n    )\n    return resp.content.decode()\n\nwhile True:\n    l , p= c.chat(l,input(\"User&gt; \"))\n    print(l[-1][\"content\"])\n</code></pre> <p>\u660e\u663e\u770b\u51fa\uff1a \u4f7f\u7528\u672c\u9879\u76ee\u7684\u4ee3\u7801\u91cf\u51cf\u5c11\u5f88\u591a\uff0c\u4e14\u53ef\u8bfb\u6027\u66f4\u9ad8</p>"},{"location":"en/","title":"Sorry, we are not ready with the English documentation yet","text":"<p>You can choose to contribute yourself:</p> <p>English documentation link</p>"}]}